#!/usr/bin/env bash
#
# Generate markdown from command help
#

set -eu

# ENVIRONMENT VARIABLES
readonly CMD

is_option_continuation() {
  ! grep -qP '^((-[\w\d](,\s+--\S+)?)|(--\S+))' <<<"$1"
}

option_to_md() {
  awk -F'[[:space:]]{3,}' '{ printf "`%s`\n\n:   %s\n", $1, toupper(substr($2,1,1)) substr($2,2) }' <<<"$1"
}

COMMAND="$(sed -E 's/\s+/-/g' <<<"$CMD")"

SYNOPSIS=''
DESCRIPTION=''
ALIASES=''
FLAGS=''
OPTIONS=''
COMMANDS=''
MANAGEMENT_COMMANDS=''
SEE_ALSO=''

CONTEXT=''

while read -r line; do

  if [[ -z "${line// /}" ]]; then
    case "$CONTEXT" in
    SYNOPSIS)
      CONTEXT='DESCRIPTION'
      ;;
    esac
    continue
  fi

  case "$line" in
  Usage:*)
    CONTEXT='SYNOPSIS'
    continue
    ;;
  Aliases:*)
    CONTEXT='ALIASES'
    continue
    ;;
  Flags:*)
    CONTEXT='FLAGS'
    continue
    ;;
  Options:*)
    CONTEXT='OPTIONS'
    continue
    ;;
  Commands:*)
    CONTEXT='COMMANDS'
    continue
    ;;
  Management\ Commands:*)
    CONTEXT='MANAGEMENT_COMMANDS'
    continue
    ;;
  esac

  if [[ -n "$CONTEXT" ]]; then
    case "$CONTEXT" in
    SYNOPSIS)
      SYNOPSIS+="${line}

"
      ;;
    DESCRIPTION)
      DESCRIPTION+="${line}

"
      ;;
    ALIASES)
      ALIASES+="${line}

"
      ;;
    FLAGS)
      if is_option_continuation "$line"; then
        FLAGS="$(head -n -1 <<<"$FLAGS")
${line}

"
      else
        FLAGS+="$(option_to_md "$line")

"
      fi
      ;;
    OPTIONS)
      if is_option_continuation "$line"; then
        OPTIONS="$(head -n -1 <<<"$OPTIONS")
${line}

"
      else
        OPTIONS+="$(option_to_md "$line")

"
      fi
      ;;
    COMMANDS)
      COMMANDS+="$(option_to_md "$line")

"
      SEE_ALSO+="${COMMAND}-${line%% *}(1), "
      ;;
    MANAGEMENT_COMMANDS)
      MANAGEMENT_COMMANDS+="$(option_to_md "$line")

"
      SEE_ALSO+="${COMMAND}-${line%% *}(1),"
      ;;
    *)
      echo "Unknown context: ${CONTEXT}" >&2
      exit 1
      ;;
    esac

    continue
  fi
  # sed '/^$/N;/^\n$/D' # squash empty lines
done < <(${CMD} --help | sed -e '/^$/N;/^\n$/D' -e 's/\]/\\]/g' -e 's/\[/\\[/g' -e '/Run.*for more information on a command.*/d')

cat <<EOF
% ${COMMAND}(1) | Vedv User Manuals

NAME
====

${COMMAND} - ${DESCRIPTION}

SYNOPSIS
========

${SYNOPSIS}

DESCRIPTION
===========

${DESCRIPTION}
EOF

if [[ -n "$ALIASES" ]]; then
  cat <<EOF

ALIASES
=======

${ALIASES}
EOF
fi

if [[ -n "$FLAGS" ]]; then
  cat <<EOF

FLAGS
=====

${FLAGS}
EOF
fi

if [[ -n "$OPTIONS" ]]; then
  cat <<EOF

OPTIONS
=======

${OPTIONS}
EOF
fi

if [[ -n "$COMMANDS" ]]; then
  cat <<EOF

COMMANDS
========

${COMMANDS}
EOF
fi

if [[ -n "$MANAGEMENT_COMMANDS" ]]; then
  cat <<EOF

MANAGEMENT COMMANDS
===================

${MANAGEMENT_COMMANDS}
EOF
fi

if [[ -z "$SEE_ALSO" ]]; then
  SEE_ALSO="${COMMAND%-*}"
fi

cat <<EOF
AUTHOR
======

Written by Yuniel Roque Cardenas <https://github.com/yunielrc>

REPORTING BUGS
==============

Report bugs at <https://github.com/yunielrc/vedv/issues>

SEE ALSO
========

${SEE_ALSO%,*}
EOF
