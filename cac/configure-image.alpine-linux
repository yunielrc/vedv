#!/usr/bin/env sh

# Configure the alpine linux image vm for vedv

set -eu

# CONSTANTS
readonly __VEDV_CONFIG_DIR='/etc/vedv-guest'

# ENVIRONMENT
readonly VEDV_USER="${VEDV_USER:-vedv}"
readonly VEDV_PASS="${VEDV_PASS:-vedv}"

# SETUP VEDV CONFIG
mkdir -p "${__VEDV_CONFIG_DIR}/layer"
# define linux distro
echo 'alpine' >"${__VEDV_CONFIG_DIR}/distro"
chmod 0444 "${__VEDV_CONFIG_DIR}/distro"
# define default user
echo "$VEDV_USER" >"${__VEDV_CONFIG_DIR}/layer/user"

# ADD USER
adduser --disabled-password "$VEDV_USER"
echo "${VEDV_USER}:${VEDV_PASS}" | chpasswd

# CHANGE ROOT PASSWORD
echo "root:${VEDV_PASS}" | chpasswd

# ENABLE COMMUNITY REPOSITORY
readonly COMMUNITY_REPO="$(grep 'alpine/v.*/community' /etc/apk/repositories | sed 's/\//\\\//g')"
readonly ENABLED_COMMUNITY_REPO="$(echo "$COMMUNITY_REPO/" | sed 's/^#//')"
sed -i "s/${COMMUNITY_REPO}/${ENABLED_COMMUNITY_REPO}" /etc/apk/repositories

# INSTALL SUDO
apk add -U sudo
# configure sudoers
echo "%wheel ALL=(ALL) NOPASSWD: ALL" >/etc/sudoers.d/wheel-nopasswd
chmod 0440 /etc/sudoers.d/wheel-nopasswd
adduser "$VEDV_USER" wheel

# INSTALL USERMOD
apk add shadow

# INSTALL OPENSSH
apk add openssh
# configure sshd
rc-update add sshd

sed -i \
  -e 's/^#\?\s*PermitRootLogin .*/PermitRootLogin yes/' \
  -e 's/^#\?\s*PasswordAuthentication .*/PasswordAuthentication yes/' \
  /etc/ssh/sshd_config

service sshd restart

# INSTALL RSYNC
apk add rsync
# configure rsyncd
rc-update add rsyncd
service rsyncd start

# INSTALL BASH
apk add bash

# ADD VEDV STANDARD SCRIPTS

# add vedv-adduser script
cat <<'EOF' >/usr/local/bin/vedv-adduser
#!/usr/bin/env bash
#
# Add a user to the system
#

set -eu

if [[ "$#" -ne 2 ]]; then
  echo "usage: vedv-adduser <username> <password>" >&2
  exit 1
fi

readonly VEDV_USER="$1"
readonly VEDV_PASS="$2"

if id "$VEDV_USER" &>/dev/null; then
  echo "user '${VEDV_USER}' already exists"
  exit 0
fi

adduser --disabled-password "$VEDV_USER"
echo "${VEDV_USER}:${VEDV_PASS}" | chpasswd
adduser "$VEDV_USER" wheel
EOF

chmod 0755 /usr/local/bin/vedv-adduser

# add vedv-mkdir script
cat <<'EOF' >/usr/local/bin/vedv-mkdir
#!/usr/bin/env bash
#
# Create a directory for a user if it does not exist
# and print the full path
#

set -eu

if [[ "$#" -ne 1 ]]; then
  echo "usage: vedv-mkdir <dir>" >&2
  exit 1
fi

readonly _DIR="$1"

if [[ ! -d "$_DIR" ]]; then
  mkdir -p "$_DIR"
fi
realpath "$_DIR"
EOF

chmod 0755 /usr/local/bin/vedv-mkdir

# add vedv-setuser script
cat <<EOF >/usr/local/bin/vedv-setuser
#!/usr/bin/env bash
#
# Set default vedv user
#

set -eu

if [[ "\$#" -ne 1 ]]; then
  echo "usage: vedv-setuser <username>" >&2
  exit 1
fi

readonly VEDV_USER="\$1"

if ! id "\$VEDV_USER" &>/dev/null; then
  echo "user '\${VEDV_USER}' does not exist" >&2
  exit 1
fi

echo "\$VEDV_USER" >"${__VEDV_CONFIG_DIR}/layer/user"
EOF

chmod 0755 /usr/local/bin/vedv-setuser

# add vedv-getuser script
cat <<EOF >/usr/local/bin/vedv-getuser
#!/usr/bin/env bash
#
# Get default vedv user
#

set -eu


cat "${__VEDV_CONFIG_DIR}/layer/user"
EOF

chmod 0755 /usr/local/bin/vedv-getuser
